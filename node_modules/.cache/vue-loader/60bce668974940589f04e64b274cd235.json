{"remainingRequest":"/home/darin/other-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darin/other-ui/src/components/JsPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darin/other-ui/src/components/JsPanel.vue","mtime":1544067326803},{"path":"/home/darin/other-ui/node_modules/vuetify-loader/lib/loader.js","mtime":1541259228119},{"path":"/home/darin/other-ui/node_modules/cache-loader/dist/cjs.js","mtime":1541259222687},{"path":"/home/darin/other-ui/node_modules/vue-loader/lib/index.js","mtime":1541259227979}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { jsPanel } from 'jspanel4/es6module/jspanel.min.js'\nexport default {\n  name: 'JsPanel',\n  data: function() {\n    return {\n      jspanel: null,\n      hiding: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  computed: {\n    panelOptions() {\n      return Object.assign({ onclosed: this.close }, this.options)\n    }\n  },\n  watch: {\n    visible(isVisible) {\n      if (isVisible) {\n        this.createPanel()\n      } else {\n        this.hide()\n      }\n    }\n  },\n  mounted() {\n    if (this.visible) {\n      this.createPanel()\n    }\n  },\n  methods: {\n    async createPanel() {\n      await this.$nextTick()\n      let options = Object.assign(\n        { content: this.$slots.default[0].elm },\n        this.panelOptions\n      )\n      if (this.$slots.headerToolbar) {\n        options = Object.assign(\n          { headerToolbar: this.$slots.headerToolbar[0].elm },\n          options\n        )\n      }\n      this.jspanel = jsPanel.create(options)\n    },\n    close() {\n      if (this.visible) {\n        this.$emit('close')\n        this.$emit('update:visible', false)\n      }\n    },\n    hide() {\n      this.jspanel.close();\n    }\n  }\n}\n",{"version":3,"sources":["JsPanel.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JsPanel.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-if=\"visible\">\n    <slot />\n    <slot\n      v-show=\"false\"\n      name=\"headerToolbar\"\n    />\n  </div>\n</template>\n<script>\nimport { jsPanel } from 'jspanel4/es6module/jspanel.min.js'\nexport default {\n  name: 'JsPanel',\n  data: function() {\n    return {\n      jspanel: null,\n      hiding: false\n    };\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  computed: {\n    panelOptions() {\n      return Object.assign({ onclosed: this.close }, this.options)\n    }\n  },\n  watch: {\n    visible(isVisible) {\n      if (isVisible) {\n        this.createPanel()\n      } else {\n        this.hide()\n      }\n    }\n  },\n  mounted() {\n    if (this.visible) {\n      this.createPanel()\n    }\n  },\n  methods: {\n    async createPanel() {\n      await this.$nextTick()\n      let options = Object.assign(\n        { content: this.$slots.default[0].elm },\n        this.panelOptions\n      )\n      if (this.$slots.headerToolbar) {\n        options = Object.assign(\n          { headerToolbar: this.$slots.headerToolbar[0].elm },\n          options\n        )\n      }\n      this.jspanel = jsPanel.create(options)\n    },\n    close() {\n      if (this.visible) {\n        this.$emit('close')\n        this.$emit('update:visible', false)\n      }\n    },\n    hide() {\n      this.jspanel.close();\n    }\n  }\n}\n</script>"]}]}